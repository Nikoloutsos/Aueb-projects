First of all, vacuum analyze was executed and we ran the explain analyze statement for all 5 queries, keeping the results. After that, we executed set enable_seqscan = off and added appropriate indexes to check whether the execution times were improved on each query.

All in all, we chose indexes mostly on non-primary keys, so we could add efficiency to the searches, and added appropriate where clauses to minimize the pool of results that needed to be found.

QUERY 1:
explain analyze
select Room_to_Amenity.listing_id, count(Room_to_Amenity.listing_id) from Room_to_Amenity
join Room on Room_to_Amenity.listing_id = Room.listing_id
where Room.accommodates > 4
group by Room_to_Amenity.listing_id;

BEFORE INDEX:
"HashAggregate  (cost=6157.64..6268.96 rows=11132 width=12) (actual time=194.811..195.838 rows=3058 loops=1)"
"  Group Key: room_to_amenity.listing_id"
"  ->  Hash Join  (cost=827.50..5773.28 rows=76871 width=4) (actual time=6.086..168.085 rows=85641 loops=1)"
"        Hash Cond: (room_to_amenity.listing_id = room.listing_id)"
"        ->  Seq Scan on room_to_amenity  (cost=0.00..4184.20 rows=290020 width=4) (actual time=0.005..63.930 rows=290020 loops=1)"
"        ->  Hash  (cost=789.26..789.26 rows=3059 width=4) (actual time=6.035..6.035 rows=3059 loops=1)"
"              Buckets: 4096  Batches: 1  Memory Usage: 140kB"
"              ->  Seq Scan on room  (cost=0.00..789.26 rows=3059 width=4) (actual time=0.003..2.750 rows=3059 loops=1)"
"                    Filter: (accommodates > 4)"
"                    Rows Removed by Filter: 8482"
"Planning time: 0.337 ms"
"Execution time: 196.496 ms"

AFTER INDEX:
"GroupAggregate  (cost=0.70..7257.45 rows=11132 width=12) (actual time=0.081..152.971 rows=3058 loops=1)"
"  Group Key: room_to_amenity.listing_id"
"  ->  Nested Loop  (cost=0.70..6761.78 rows=76871 width=4) (actual time=0.040..131.163 rows=85641 loops=1)"
"        ->  Index Only Scan using ind1 on room  (cost=0.28..90.17 rows=3059 width=4) (actual time=0.029..0.860 rows=3059 loops=1)"
"              Heap Fetches: 0"
"        ->  Index Only Scan using ind1b on room_to_amenity  (cost=0.42..1.92 rows=26 width=4) (actual time=0.007..0.031 rows=28 loops=3059)"
"              Index Cond: (listing_id = room.listing_id)"
"              Heap Fetches: 0"
"Planning time: 0.379 ms"
"Execution time: 153.638 ms"

/* Query 1: w/out index: 196.496 ms, w/ index: 153.638 ms */

QUERY 2:
explain analyze
select Amenity.amenity_name, count(Room_to_Amenity.amenity_id) from Room_to_Amenity
join Amenity on Room_to_Amenity.amenity_id = Amenity.amenity_id
group by Amenity.amenity_name
order by count(Room_to_Amenity.amenity_id) desc;

BEFORE INDEX:
"Sort  (cost=5347.02..5347.52 rows=197 width=23) (actual time=338.745..338.784 rows=197 loops=1)"
"  Sort Key: (count(room_to_amenity.amenity_id)) DESC"
"  Sort Method: quicksort  Memory: 39kB"
"  ->  Finalize GroupAggregate  (cost=5336.07..5339.52 rows=197 width=23) (actual time=338.350..338.662 rows=197 loops=1)"
"        Group Key: amenity.amenity_name"
"        ->  Sort  (cost=5336.07..5336.56 rows=197 width=23) (actual time=338.345..338.420 rows=370 loops=1)"
"              Sort Key: amenity.amenity_name"
"              Sort Method: quicksort  Memory: 52kB"
"              ->  Gather  (cost=5306.89..5328.56 rows=197 width=23) (actual time=335.884..337.804 rows=370 loops=1)"
"                    Workers Planned: 1"
"                    Workers Launched: 1"
"                    ->  Partial HashAggregate  (cost=4306.89..4308.86 rows=197 width=23) (actual time=331.725..331.779 rows=185 loops=2)"
"                          Group Key: amenity.amenity_name"
"                          ->  Hash Join  (cost=6.43..3453.89 rows=170600 width=19) (actual time=0.141..229.285 rows=145010 loops=2)"
"                                Hash Cond: (room_to_amenity.amenity_id = amenity.amenity_id)"
"                                ->  Parallel Seq Scan on room_to_amenity  (cost=0.00..2990.00 rows=170600 width=4) (actual time=0.005..77.335 rows=145010 loops=2)"
"                                ->  Hash  (cost=3.97..3.97 rows=197 width=19) (actual time=0.115..0.115 rows=197 loops=2)"
"                                      Buckets: 1024  Batches: 1  Memory Usage: 19kB"
"                                      ->  Seq Scan on amenity  (cost=0.00..3.97 rows=197 width=19) (actual time=0.006..0.050 rows=197 loops=2)"
"Planning time: 0.310 ms"
"Execution time: 338.929 ms"

AFTER INDEX:
"Sort  (cost=7868.53..7869.02 rows=197 width=23) (actual time=328.158..328.196 rows=197 loops=1)"
"  Sort Key: (count(room_to_amenity.amenity_id)) DESC"
"  Sort Method: quicksort  Memory: 39kB"
"  ->  Finalize GroupAggregate  (cost=7856.10..7861.02 rows=197 width=23) (actual time=327.881..328.078 rows=197 loops=1)"
"        Group Key: amenity.amenity_name"
"        ->  Sort  (cost=7856.10..7857.08 rows=394 width=23) (actual time=327.877..327.931 rows=269 loops=1)"
"              Sort Key: amenity.amenity_name"
"              Sort Method: quicksort  Memory: 44kB"
"              ->  Gather  (cost=7797.74..7839.11 rows=394 width=23) (actual time=324.534..327.553 rows=269 loops=1)"
"                    Workers Planned: 2"
"                    Workers Launched: 2"
"                    ->  Partial HashAggregate  (cost=6797.74..6799.71 rows=197 width=23) (actual time=318.263..318.293 rows=90 loops=3)"
"                          Group Key: amenity.amenity_name"
"                          ->  Hash Join  (cost=18.98..6193.53 rows=120842 width=19) (actual time=0.180..234.328 rows=96673 loops=3)"
"                                Hash Cond: (room_to_amenity.amenity_id = amenity.amenity_id)"
"                                ->  Parallel Index Only Scan using ind2b on room_to_amenity  (cost=0.42..5850.94 rows=120842 width=4) (actual time=0.022..83.449 rows=96673 loops=3)"
"                                      Heap Fetches: 0"
"                                ->  Hash  (cost=16.10..16.10 rows=197 width=19) (actual time=0.133..0.133 rows=197 loops=3)"
"                                      Buckets: 1024  Batches: 1  Memory Usage: 19kB"
"                                      ->  Index Scan using ind2 on amenity  (cost=0.14..16.10 rows=197 width=19) (actual time=0.011..0.071 rows=197 loops=3)"
"Planning time: 0.222 ms"
"Execution time: 328.394 ms"

/* Query 2: w/out index: 338.929 ms, w/ index: 328.394 ms */

QUERY 3:
explain analyze
select Room.listing_id, Room.beds, Room.bedrooms, Listing.listing_url from Room
join Listing on Listing.id = Room.listing_id
join Host on Host.id = Listing.host_id
group by Room.listing_id, Room.beds, Room.bedrooms, Listing.listing_url
having Room.beds>=4 and Room.bedrooms>=2
order by Room.beds asc;

BEFORE INDEX:
"Group  (cost=3394.92..3402.03 rows=569 width=49) (actual time=19.113..20.107 rows=1375 loops=1)"
"  Group Key: room.beds, room.listing_id, room.bedrooms, listing.listing_url"
"  ->  Sort  (cost=3394.92..3396.34 rows=569 width=49) (actual time=19.111..19.391 rows=1375 loops=1)"
"        Sort Key: room.beds, room.listing_id, room.bedrooms, listing.listing_url"
"        Sort Method: quicksort  Memory: 240kB"
"        ->  Nested Loop  (cost=0.57..3368.88 rows=569 width=49) (actual time=0.026..18.174 rows=1375 loops=1)"
"              ->  Nested Loop  (cost=0.29..3194.24 rows=569 width=53) (actual time=0.019..9.008 rows=1375 loops=1)"
"                    ->  Seq Scan on room  (cost=0.00..818.12 rows=569 width=12) (actual time=0.008..2.502 rows=1375 loops=1)"
"                          Filter: ((beds >= 4) AND (bedrooms >= 2))"
"                          Rows Removed by Filter: 10166"
"                    ->  Index Scan using "UN_ID" on listing  (cost=0.29..4.18 rows=1 width=45) (actual time=0.004..0.004 rows=1 loops=1375)"
"                          Index Cond: (id = room.listing_id)"
"              ->  Index Only Scan using host_pkey on host  (cost=0.28..0.31 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1375)"
"                    Index Cond: (id = listing.host_id)"
"                    Heap Fetches: 0"
"Planning time: 1.531 ms"
"Execution time: 20.411 ms"

AFTER INDEX:
"Group  (cost=2886.19..2893.30 rows=569 width=49) (actual time=8.200..9.202 rows=1375 loops=1)"
"  Group Key: room.beds, room.listing_id, room.bedrooms, listing.listing_url"
"  ->  Sort  (cost=2886.19..2887.61 rows=569 width=49) (actual time=8.199..8.482 rows=1375 loops=1)"
"        Sort Key: room.beds, room.listing_id, room.bedrooms, listing.listing_url"
"        Sort Method: quicksort  Memory: 240kB"
"        ->  Nested Loop  (cost=0.85..2860.15 rows=569 width=49) (actual time=0.025..7.326 rows=1375 loops=1)"
"              ->  Nested Loop  (cost=0.57..2685.51 rows=569 width=53) (actual time=0.020..4.697 rows=1375 loops=1)"
"                    ->  Index Only Scan using ind3 on room  (cost=0.29..309.38 rows=569 width=12) (actual time=0.013..0.651 rows=1375 loops=1)"
"                          Index Cond: ((beds >= 4) AND (bedrooms >= 2))"
"                          Heap Fetches: 0"
"                    ->  Index Scan using ind3b on listing  (cost=0.29..4.18 rows=1 width=45) (actual time=0.002..0.002 rows=1 loops=1375)"
"                          Index Cond: (id = room.listing_id)"
"              ->  Index Only Scan using host_pkey on host  (cost=0.28..0.31 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1375)"
"                    Index Cond: (id = listing.host_id)"
"                    Heap Fetches: 0"
"Planning time: 0.446 ms"
"Execution time: 9.497 ms"

/* Query 3: w/out index: 20.411 ms, w/ index: 9.497 ms */

QUERY 4:
explain analyze
select Location.neighbourhood_cleansed,count(Listing.id) from Location 
join Listing on Location.listing_id = Listing.id
join Host on Host.id = Listing.host_id
where Host.listings_count>2
group by Location.neighbourhood_cleansed;

BEFORE INDEX:
"HashAggregate  (cost=3980.55..3981.00 rows=45 width=37) (actual time=28.672..28.685 rows=44 loops=1)"
"  Group Key: location.neighbourhood_cleansed"
"  ->  Hash Join  (cost=3556.76..3969.85 rows=2140 width=33) (actual time=18.752..26.532 rows=5623 loops=1)"
"        Hash Cond: (location.listing_id = listing.id)"
"        ->  Seq Scan on location  (cost=0.00..348.41 rows=11541 width=33) (actual time=0.004..2.621 rows=11541 loops=1)"
"        ->  Hash  (cost=3530.01..3530.01 rows=2140 width=4) (actual time=18.737..18.737 rows=5623 loops=1)"
"              Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 262kB"
"              ->  Hash Join  (cost=569.29..3530.01 rows=2140 width=4) (actual time=2.701..16.883 rows=5623 loops=1)"
"                    Hash Cond: (listing.host_id = host.id)"
"                    ->  Seq Scan on listing  (cost=0.00..2930.41 rows=11541 width=8) (actual time=0.002..9.831 rows=11541 loops=1)"
"                    ->  Hash  (cost=554.54..554.54 rows=1180 width=4) (actual time=2.693..2.693 rows=1180 loops=1)"
"                          Buckets: 2048  Batches: 1  Memory Usage: 58kB"
"                          ->  Seq Scan on host  (cost=0.00..554.54 rows=1180 width=4) (actual time=0.002..2.348 rows=1180 loops=1)"
"                                Filter: (listings_count > 2)"
"                                Rows Removed by Filter: 5183"
"Planning time: 0.296 ms"
"Execution time: 28.747 ms"

AFTER INDEX:
"HashAggregate  (cost=2522.92..2523.37 rows=45 width=37) (actual time=24.444..24.456 rows=44 loops=1)"
"  Group Key: location.neighbourhood_cleansed"
"  ->  Hash Join  (cost=1051.14..2512.22 rows=2140 width=33) (actual time=12.007..22.343 rows=5623 loops=1)"
"        Hash Cond: (location.listing_id = listing.id)"
"        ->  Index Scan using ind4 on location  (cost=0.29..1396.69 rows=11541 width=33) (actual time=0.008..5.398 rows=11541 loops=1)"
"        ->  Hash  (cost=1024.10..1024.10 rows=2140 width=4) (actual time=11.990..11.990 rows=5623 loops=1)"
"              Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 262kB"
"              ->  Hash Join  (cost=684.67..1024.10 rows=2140 width=4) (actual time=3.052..10.370 rows=5623 loops=1)"
"                    Hash Cond: (listing.host_id = host.id)"
"                    ->  Index Only Scan using ind3b on listing  (cost=0.29..309.40 rows=11541 width=8) (actual time=0.010..2.972 rows=11541 loops=1)"
"                          Heap Fetches: 0"
"                    ->  Hash  (cost=669.64..669.64 rows=1180 width=4) (actual time=3.037..3.037 rows=1180 loops=1)"
"                          Buckets: 2048  Batches: 1  Memory Usage: 58kB"
"                          ->  Index Scan using host_pkey on host  (cost=0.28..669.64 rows=1180 width=4) (actual time=0.011..2.687 rows=1180 loops=1)"
"                                Filter: (listings_count > 2)"
"                                Rows Removed by Filter: 5183"
"Planning time: 0.335 ms"
"Execution time: 24.518 ms"

/* Query 4: w/out index: 28.747 ms, w/ index: 24.518 ms */

QUERY 5:
explain analyze
select Room.listing_id, temp.avg_price from Room join (select listing_id,ROUND(avg(price),2) as avg_price from Calendar
	where price is not null
	group by listing_id) as temp
on Room.listing_id = temp.listing_id
order by temp.avg_price;

BEFORE INDEX:
"Sort  (cost=62470.26..62499.05 rows=11513 width=36) (actual time=3444.959..3447.260 rows=11541 loops=1)"
"  Sort Key: temp.avg_price"
"  Sort Method: quicksort  Memory: 925kB"
"  ->  Hash Join  (cost=61354.23..61693.66 rows=11513 width=36) (actual time=3414.715..3434.458 rows=11541 loops=1)"
"        Hash Cond: (room.listing_id = temp.listing_id)"
"        ->  Index Only Scan using unq on room  (cost=0.29..309.40 rows=11541 width=4) (actual time=0.014..13.272 rows=11541 loops=1)"
"              Heap Fetches: 0"
"        ->  Hash  (cost=61210.04..61210.04 rows=11513 width=36) (actual time=3414.678..3414.678 rows=11541 loops=1)"
"              Buckets: 16384  Batches: 1  Memory Usage: 624kB"
"              ->  Subquery Scan on temp  (cost=60922.21..61210.04 rows=11513 width=36) (actual time=3393.432..3410.650 rows=11541 loops=1)"
"                    ->  Finalize HashAggregate  (cost=60922.21..61094.91 rows=11513 width=36) (actual time=3393.431..3405.859 rows=11541 loops=1)"
"                          Group Key: calendar.listing_id"
"                          ->  Gather  (cost=58303.00..60749.52 rows=23026 width=36) (actual time=3353.888..3371.291 rows=15823 loops=1)"
"                                Workers Planned: 2"
"                                Workers Launched: 2"
"                                ->  Partial HashAggregate  (cost=57303.00..57446.92 rows=11513 width=36) (actual time=3350.574..3359.749 rows=5274 loops=3)"
"                                      Group Key: calendar.listing_id"
"                                      ->  Parallel Seq Scan on calendar  (cost=0.00..48527.00 rows=1755200 width=9) (actual time=1.152..2150.631 rows=1404162 loops=3)"
"                                            Filter: (price IS NOT NULL)"
"Planning time: 0.271 ms"
"Execution time: 3449.543 ms"

AFTER INDEX:
"Sort  (cost=117799.89..117828.67 rows=11513 width=36) (actual time=2498.209..2500.659 rows=11541 loops=1)"
"  Sort Key: (round(avg(calendar.price), 2))"
"  Sort Method: quicksort  Memory: 925kB"
"  ->  Merge Join  (cost=1000.74..117023.28 rows=11513 width=36) (actual time=11.803..2490.972 rows=11541 loops=1)"
"        Merge Cond: (room.listing_id = calendar.listing_id)"
"        ->  Index Only Scan using unq on room  (cost=0.29..309.40 rows=11541 width=4) (actual time=0.018..3.699 rows=11541 loops=1)"
"              Heap Fetches: 0"
"        ->  Finalize GroupAggregate  (cost=1000.46..116425.99 rows=11513 width=36) (actual time=11.781..2477.459 rows=11541 loops=1)"
"              Group Key: calendar.listing_id"
"              ->  Gather Merge  (cost=1000.46..116080.60 rows=23026 width=36) (actual time=11.667..2457.614 rows=12478 loops=1)"
"                    Workers Planned: 2"
"                    Workers Launched: 2"
"                    ->  Partial GroupAggregate  (cost=0.43..112422.80 rows=11513 width=36) (actual time=0.188..1676.639 rows=4159 loops=3)"
"                          Group Key: calendar.listing_id"
"                          ->  Parallel Index Only Scan using ind5 on calendar  (cost=0.43..103502.88 rows=1755202 width=9) (actual time=0.021..756.624 rows=1404162 loops=3)"
"                                Heap Fetches: 0"
"Planning time: 0.136 ms"
"Execution time: 2505.315 ms"

/* Query 5: w/out index: 3449.543 ms, w/ index: 2505.315 ms */